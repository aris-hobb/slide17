package sorting;

public class Main {

    abstract static class Shape {
        abstract double getArea();
    }

    interface Drawable {
        void draw();
    }

    static class Circle extends Shape implements Drawable {
        private double radius;

        public Circle(double radius) {
            this.radius = radius;
        }

        @Override
        public double getArea() {
            return Math.PI * radius * radius;
        }

        @Override
        public void draw() {
            System.out.println("Menggambar lingkaran dengan radius " + radius);
        }
    }

    static class Rectangle extends Shape implements Drawable {
        private double width;
        private double height;

        public Rectangle(double width, double height) {
            this.width = width;
            this.height = height;
        }

        @Override
        public double getArea() {
            return width * height;
        }

        @Override
        public void draw() {
            System.out.println("Menggambar persegi panjang dengan lebar " + width + " dan tinggi " + height);
        }
    }

    public static void main(String[] args) {
        Shape circle = new Circle(7);
        Shape rectangle = new Rectangle(5, 10);

        Drawable drawableCircle = (Drawable) circle;
        Drawable drawableRectangle = (Drawable) rectangle;

        System.out.println("Luas Lingkaran: " + circle.getArea());
        drawableCircle.draw();

        System.out.println("Luas Persegi Panjang: " + rectangle.getArea());
        drawableRectangle.draw();
    }
}
